apply plugin: "war"
apply plugin: "spring-boot"
apply plugin: "io.spring.dependency-management"

buildscript {
    ext {
        springBootVersion = "1.4.1.RELEASE"
    }

    dependencies { 
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

eclipse {
    project {
        name="cordwood-console"
    }
}

war {
    baseName = "cordwood-console"
    version = mainVersion
    manifest {
        attributes(
            "Implementation-Version": mainVersion
        )
    }
}

sourceSets {
    main.java.srcDirs = ["src/main/java"]
    main.resources.srcDirs = ["src/main/resources", "src/main/webapp"]
    test.java.srcDirs = ["src/test/java"]
    test.resources.srcDirs = ["src/test/resources"]
}

configurations {
    providedRuntime
    compile.exclude module: "hibernate-entitymanager"
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "javax.servlet:jstl"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile "commons-codec:commons-codec:1.9"
    compile "commons-lang:commons-lang:2.6"
    compile "commons-fileupload:commons-fileupload:1.3.1"
    
    compile "org.eclipse.persistence:eclipselink:2.5.0"
    runtime "org.hsqldb:hsqldb:2.3.4"
    runtime "mysql:mysql-connector-java:5.1.35"
    
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    providedRuntime "org.apache.tomcat.embed:tomcat-embed-jasper"
    
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

eclipse {
    classpath {
         downloadSources=true
    }
}
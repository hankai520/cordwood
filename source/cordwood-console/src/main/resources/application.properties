##########################################################################################
#
#  cordwood-console 配置文件
#
##########################################################################################

#嵌入式服务器参数
server.port=8000
server.address=0.0.0.0
server.session.timeout=1800
server.error.whitelabel.enabled=false

#要绑定的域名
proxy.name=
#要绑定的端口
proxy.port=
#要绑定的协议
proxy.scheme=

#文件上传配置
spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=100MB

#资源配置
spring.resources.cache-period=20

# 激活的配置（多个用逗号分隔）。可以在启动时用命令行参数 --spring.profiles.active=prof1,prof2  来覆盖
# 目前可用的配置为 prod, test, hsql, mysql, oracle，其中 （hsql, mysql, oracle）为数据库配置
# 目前只支持单数据库配置，因此此3个配置是互斥的。如需要切换数据库，将以上三个选项中的某一个填入下面的设置中即可。
# 为不同配置使用不同设置，可以新建 spring-{profile}.properties 文件来实现
spring.profiles.active=actuator,security,prod,hsql

# 此配置影响数据库初始化脚本的执行（建库执行 schema-${platform}.sql，初始化数据执行 data-${platform}.sql）
spring.datasource.platform=hsql
# 启用后，在数据库初始化脚本执行过程中发生错误，程序会继续运行。因为 HSQL 在新建列语法中没有提供 IF EXISTS 支持
# 这导致重复执行脚本会报 SQL 错误。开启此选项后，可以避免错误导致程序无法启动
spring.datasource.continue-on-error=false

# 日志及调试设置
#debug=true
debug=false
logging.level.root=INFO
logging.file=${app.log}/system.txt
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{12} - %msg%n
#logging.level.org.org.springframework=DEBUG
logging.level.org.eclipse.persistence=WARN


plugins {
	id "io.codearte.nexus-staging" version "0.11.0"
}

nexusStaging {
    packageGroup = "ren.hankai"
}

ext {
    mainVersion = "1.0.0.RELEASE"
    
    springVersion = "4.3.3.RELEASE"
    
    linkHomepage = "https://github.com/hankai520/cordwood"
    linkScmUrl = "https://github.com/hankai520/cordwood"
	linkScmConnection = "https://github.com/hankai520/cordwood.git"
	linkScmDevConnection = "https://github.com/hankai520/cordwood.git"
	
	developerId = "hankai945"
	developerName = "Kai Han"
	developerEmail = "john.han.kai@gmail.com"
	
	licenseName = "The MIT License (MIT)"
	licenseUrl = "https://github.com/hankai520/cordwood/blob/master/LICENSE"
	licenseDistribution = "repo"
	
	sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
	sonatypeSnapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

apply plugin: "eclipse"

eclipse {
    project {
        name="cordwood"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "eclipse-wtp"
    apply plugin: "checkstyle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    buildscript {
        repositories {
            maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        }
        dependencies {
        	classpath "com.bmuschko:gradle-nexus-plugin:2.3.1"
        }
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    eclipse {
        classpath {
             downloadSources=true
        }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:1.7.12"
        compile "org.slf4j:jcl-over-slf4j:1.7.12"
        compile "org.slf4j:log4j-over-slf4j:1.7.12"
        
        compile "ch.qos.logback:logback-classic:1.1.7"
        compile "javax.interceptor:javax.interceptor-api:1.+"

        testCompile "junit:junit:4.12"
        testCompile "com.jayway.jsonpath:json-path-assert:0.8.1"
        testCompile "org.easymock:easymock:3.1"
        testCompile "com.google.inject:guice:4.0"
    }
    
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-parameters"
        options.encoding = "UTF-8"
    }
    
    javadoc {
    	options.addStringOption('encoding', 'UTF-8')
	}
	
	checkstyle {
		toolVersion = "8.33"
		configDirectory.set(rootProject.file("config/checkstyle"))
		configFile file("$configDir/google_checks.xml")
	}
	
	gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}